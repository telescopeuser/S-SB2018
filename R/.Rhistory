mtcars
summary(mtcars)
mtcars$cyl = as.factor(mtcars$cyl)
summary(mtcars)
leadership$age[leadership$age==99] <- NA
leadership$agecat[leadership$age<=55] <- "Young"
leadership$agecat[leadership$age>55 & leadership$age<=75] <- "Middle Aged"
leadership$agecat[leadership$age>75] <- "Elder"
leadership
leadership <- data.frame(manager, country, gender, age, q1, q2, q3, q4, q5, stringsAsFactors=FALSE)
manager <- c(1,2,3,4,5)
country <- c("US", "US", "UK", "UK", "UK")
gender <- c("M", "F", "F", "M", "F")
age <- c(32, 45, 25, 39, 99)
q1 <- c(5, 3, 3, 3, 2)
q2 <- c(4, 5, 5, 3, 2)
q3 <- c(5, 2, 5, 4, 1)
q4 <- c(5, 5, 5, NA, 2)
q5 <- c(5, 5, 2, NA, 1)
leadership <- data.frame(manager, country, gender, age, q1, q2, q3, q4, q5)
leadership$age[leadership$age==99] <- NA
leadership$agecat[leadership$age<=55] <- "Young"
leadership$agecat[leadership$age>55 & leadership$age<=75] <- "Middle Aged"
leadership$agecat[leadership$age>75] <- "Elder"
leadership
is.na(leadership)
mean(leadership$q4)
mean(leadership$q4, na.rm = T)
leadershipNoMissing <- na.omit(leadership)
leadership
leadershipNoMissing
attach(leadership)
leadership$mean = (q1+q2+q3+q4+q5)/5
leadership
l <- subset(leadership, leadership$country=="UK", select=q1:q5)
l
str(leadership)
head(leadership)
head(mtcars)
tail(mtcars)
mtcars
dim(leadership)
dim(mtcars)
counts_cyl <- table(mtcars$cyl)
## count frequency for each category
counts_cyl <- table(mtcars$cyl)
counts_cyl
## count frequency for each category
counts_cyl <- table(mtcars$cyl)
counts_cyl
barplot(counts_cyl)
## count frequency for each category ####
mtcars
## count frequency for each category ####
mtcars
summary(mtcars)
## count frequency for each category ####
mtcars
summary(mtcars)
mtcars$vs <- as.factor(mtcars$vs)
## count frequency for each category ####
mtcars
mtcars$vs <- as.factor(mtcars$vs)
summary(mtcars)
## count frequency for each category
counts_cyl <- table(mtcars$cyl)
counts_cyl
## plot basic bar chart
barplot(counts_cyl)
## count frequency for each category
## plot a simple histogram
hist(mtcars$mpg)
## count frequency for each category
## plot a simple histogram
hist(mtcars$mpg,
breaks=12,
xlab="Miles Per Gallon",
main="Histogram with 12 Bins")
## count frequency for each category
## plot a simple histogram
hist(mtcars$mpg,
breaks=10,
xlab="Miles Per Gallon",
main="Histogram with 12 Bins")
## count frequency for each category
## plot a simple histogram
hist(mtcars$mpg,
breaks=5,
xlab="Miles Per Gallon",
main="Histogram with 12 Bins")
## count frequency for each category
## plot a simple histogram
hist(mtcars$mpg,
breaks=15,
xlab="Miles Per Gallon",
main="Histogram with 12 Bins")
boxplot(mtcars$mpg, main = "Boxplot of Miles/Gallon")
# one boxplot ####
boxplot(mtcars$mpg, main = "Boxplot of Miles/Gallon")
# two boxplots ####
boxplot(mtcars$mpg~factor(mtcars$vs), main = "Boxplot of Miles/Gallon for Different Engine Types")
# one boxplot ####
boxplot(mtcars$mpg, main = "Boxplot of Miles/Gallon")
# two boxplots ####
boxplot(mtcars$mpg~factor(mtcars$vs), main = "Boxplot of Miles/Gallon for Different Engine Types")
# two boxplots ####
boxplot(mtcars$mpg~factor(mtcars$vs), main = "Boxplot of Miles/Gallon for Different Engine Types")
# two boxplots ####
boxplot(mtcars$mpg~factor(mtcars$vs), main = "Boxplot of Miles/Gallon for Different Engine Types", xlab= "vs", ylab= "Miles per gallon")
# two boxplots ####
attach(mtcars)
mtcars$vs <- as.factor(mtcars$vs)
boxplot(mpg~vs, main = "Boxplot of Miles/Gallon for Different Engine Types", xlab= "vs", ylab= "Miles per gallon")
# two boxplots ####
attach(mtcars)
mtcars$vs <- as.factor(mtcars$vs)
boxplot(mpg~vs, main = "Boxplot of Miles/Gallon for Different Engine Types", xlab= "VS", ylab= "Miles per gallon")
plot(mtcars)
attach(mtcars)
plot(wt,mpg)
attach(mtcars)
plot(wt,mpg, xlab = "Weight in 1000 pounds", ylab = "Miles per Gallon", main = "Weight vs. Miles per gallon")
attach(mtcars)
plot(wt,mpg, xlab = "Weight in 1000 pounds", ylab = "Miles per Gallon", main = "Weight vs. Miles per gallon")
abline(lm(mpg~wt, data = mtcars))
install.packages("tidyverse")
library(modelr)
library(readr)
Cola <- read_csv("C:/Users/ISSPNR/Desktop/SSB/SIA run nov 20/R/Cola.csv")
View(Cola)
plot(cars)
source('C:/Users/ISSPNR/Desktop/SSB/SIA run nov 20/R/BondFunds_QQPlot.R', echo=TRUE)
?shapiro.test
?prop.test
WillChoose <- c(163, 154)
TotalRespondents <- c(227, 262)
prop.test(WillChoose, TotalRespondents, correct = FALSE)
prop.test(WillChoose, TotalRespondents, correct = FALSE, alternative = "less")
a = c(1,2,3)
a
a
a = a +1
a
sum(a)
sqrt(a)
rep(a, 10)
contributors()
WillChoose <- c(163, 154)
TotalRespondents <- c(227, 262)
prop.test(WillChoose, TotalRespondents, correct = FALSE)
WillChoose <- c(163, 154)
TotalRespondents <- c(227, 262)
prop.test(WillChoose, TotalRespondents, correct = FALSE)
prop.test(WillChoose, TotalRespondents, correct = FALSE, alternative = "less")
prop.test(WillChoose, TotalRespondents, correct = FALSE, alternative = "greater")
?persp
q()
shiny::runApp('C:/Users/ISSPNR/Desktop/Vision/data/all-mias/thresh')
mtcars
describe(mtcars)
contents(mtcars)
install.packages("Hmisc")
contents(mtcars)
a = mtcars
contents(a)
a = read.csv("Restaurant.csv")
a
contents(a)
?contents
content(a)
?Hmisc
??Hmisc
library(Hmisc)
contents(a)
contents(mtcars)
describe(a)
b = describe(a)
b
View(b)
View(b)
3 % 1
3 %% 1
3 %% 2
x=8
x-(2+3)
x == 1
x == 1
devtools::install_github("rstudio/addinexamples", type = "source")
demo_spinners(which = NULL)
demo_spinners()
library("cli", lib.loc="~/R/win-library/3.4")
demo_spinners()
demo_spinners(growHorizontal)
demo_spinners(which = growHorizontal)
demo_spinners()
tree()
library("bmp", lib.loc="~/R/win-library/3.4")
detach("package:bmp", unload=TRUE)
install.packages(c("backports", "cowplot", "curl", "dbplyr", "digest", "git2r", "htmlTable", "irlba", "keras", "knitr", "profvis", "RCurl", "reshape2", "reticulate", "rlang", "rprojroot", "sp", "syuzhet", "tensorflow", "testthat", "tfruns", "tibble", "viridis", "visNetwork", "withr", "xts", "yaml", "zoo"))
matrix(1:9, nrow = 3, ncol = 3)
# test
x = matrix(1:9, nrow = 3, ncol = 3)
x + 1
y = x + 2
y + x
x <- list("a" = 2.5, "b" = TRUE, "c" = 1:3)
x
x$a
y = x + 1
y <- list("a" = 2.5, "b" = TRUE, "c" = 1:3)
x + y
length(x)
> # create a vector for each column
> manager = c(1,2,3,4,5)
> country = c("US", "US", "UK", "UK", "UK")
> gender = c("M", "F", "F", "M", "F")
> age = c(32, 45, 25, 39, 99)
> q1 = c(5, 3, 3, 3, 2)
> q2 = c(4, 5, 5, 3, 2)
> q3 = c(5, 2, 5, 4, 1)
> q4 = c(5, 5, 5, NA, 2)
> q5 = c(5, 5, 2, NA, 1)
> # create a data frame by combining all the column vectors
> leadership = data.frame(manager, country, gender, age, q1, q2, q3, q4, q5
age = c(32, 45, 25, 39, 99)
# create a numeric vector
country = c("US", "US", "UK", "UK", "UK")
# create a character vector
age = c(32, 45, 25, 39, 99)
# create a numeric vector
country = c("US", "US", "UK", "UK", "UK")
# create a character vector
age
country
x = matrix(1:9, nrow = 3, ncol = 3)   
# assigning a matrix to the variable x
x + 1
y = x + 2
x + y
library(readr)
CEOCompensation <- read_csv("CEOCompensation.csv")
View(CEOCompensation)
x = matrix(1:9, nrow = 3, ncol = 3)
x
x$1
x[1]
x[1,]
x = list("a" = 2.5, "b" = TRUE, "c" = 1:3)
x[1]
x[2]
manager = c(1,2,3,4,5)
country = c("US", "US", "UK", "UK", "UK")
gender = c("M", "F", "F", "M", "F")
age = c(32, 45, 25, 39, 99)
q1 = c(5, 3, 3, 3, 2)
q2 = c(4, 5, 5, 3, 2)
q3 = c(5, 2, 5, 4, 1)
q4 = c(5, 5, 5, NA, 2)
q5 = c(5, 5, 2, NA, 1)
# create a data frame by combining all the column vectors
leadership = data.frame(manager, country, gender, age, q1, q2, q3, q4, q5)
leadership
leadership$manager
leadership[2]
plot(leadership$age,leadership$q1)
plot(leadership$age,leadership$q1)
plot(leadership$age,leadership$q1, title = "x")
plot(leadership$age,leadership$q1)
?plot
plot(leadership$age,leadership$q1, p)
plot(leadership$age,leadership$q1, type ="p")
plot(leadership$age,leadership$q1, type ="l")
plot(leadership$age,leadership$q1, type ="b")
plot(leadership$age,leadership$q1, type ="h")
plot(leadership$age,leadership$q1, type ="s")
plot(leadership$age,leadership$q1, type ="n")
plot(leadership$age,leadership$q1, type ="s", main = "x")
pie(leadership$age)
heatmap(leadership$age, leadership$q1)
x
x = matrix(1:9, nrow = 3, ncol = 3) 
x
heatmap
heatmap(x)
heatmap(x, keep.dendro = FALSE)
heatmap(x, keep.dendro = FALSE)
heatmap(x, keep.dendro = TRUE)
heatmap.2(x, dendrogram = "none")
library(gplot)
library(gplots)
str(mtcars)
describe(mtcars)
contents(mtcars)
content(mtcars)
attributes(mtcars)
data(mtcars)
?data
mtcars
pie(mtcars$cyl)
counts_cyl <- table(mtcars$cyl)
pie(counts_cyl)
?pie
pie(counts_cyl, radius = 1)
pie(counts_cyl, radius = .9)
pie(counts_cyl, radius = 2)
pie(counts_cyl, radius = 1)
pie(counts_cyl, radius = 1)
pie(counts_cyl)
plot(mtcars)
?plot
setwd("~/a")
t = read.csv('titanic3.csv')
t = read.csv('titanic3.csv')
setwd("C:/Users/ISSPNR/Desktop/SSB/public run 22 jan/R")
t = read.csv('titanic3.csv')
View(t)
t = read.csv('titanic3.csv')
unique(t$pclass)
summary(t)
factor(t$pclass)
summary(t)
t$pclass = factor(t$pclass)
summary(t)
t$pclass = factor(t$pclass)
t$survived = factor(t$survived)
t$gender = factor(t$sex)
summary(t)
library(ggplot2)
ggplot(t, aes(x=survived)) + geom_bar()
ggplot(t, aes(x=age)) + geom_bar()
ggplot(t, aes(x=survived)) + geom_bar()
ggplot(t, aes(x=age)) + geom_bar()
ggplot(t, aes(x=pclass)) + geom_bar()
ageHistogram = ggplot(t, aes(x=age)) + geom_histogram()
View(ageHistogram)
x = 45
x
ageHistogram
ggplot(t, aes(x=pclass)) + geom_bar()
survivedBar = ggplot(t, aes(x=survived)) + geom_bar()
survivedLabels = labs(x= "survival", y= "Number of Passengers", title = "Survival Rate", subtitle = "On the titanic")
survivedBar + survivedLabels
ageHistogram+ survivedLabels
ggplot(t, aes(x=age)) + geom_histogram(binwidth = 20)
ggplot(t, aes(x=age)) + geom_histogram(binwidth = 10)
ggplot(t, aes(x=age)) + geom_histogram(binwidth = 30)
a
ageHistogram5
#reusable age histogram Object
ageHistogram5 = ggplot(t, aes(x=age)) + geom_histogram(binwidth = 5)
ageHistogram5
#resuable gender Bar Object
genderBar = ggplot(t, aes(x=gender)) + geom_bar()
genderBar
#resuable gender Bar Object
classBar = ggplot(t, aes(x=pclass)) + geom_bar()
classBar
#Reusable Basic Title Object
basicTitle = labs(title = "Titanic Basic Analysis")
#adding reusable objects
survivedBar + basicTitle
ageHistogram5 + basicTitle
genderBar + basicTitle
ggplot(t, aes(gender,age)) + geom_boxplot()
ggplot(t, aes(pclass,age)) + geom_boxplot()
?geom_boxplot
# Reusable gender stacked bar object
genderSurvivalBar = ggplot(t, aes(x=gender, fill= survived)) + geom_bar()
genderSurvivalBar
# Reusable age stacked bar object
ageSurvivalHistogram15 = ggplot(t, aes(x=age, fill= survived)) + geom_histogram(binwidth = 15)
ageSurvivalHistogram15
# Reusable class stacked bar object
classSurvivalBar = ggplot(t, aes(x=pclass, fill= survived)) + geom_bar()
classSurvivalBar
#Reusable Survival Rate Title Object
survivalRateTitle = labs(title = "Titanic Survival Rates")
#chaining reusable objects
genderSurvivalBar + survivalRateTitle
ageSurvivalHistogram15 + survivalRateTitle
classSurvivalBar + survivalRateTitle
ageSurvivalHistogram15+ facet_grid(gender~pclass)
facetChart = ageSurvivalHistogram15+ facet_grid(gender~pclass)+ labs(title="Titanic Survival Rates across categories")
facetChart = ageSurvivalHistogram15+ facet_grid(gender~pclass)+ labs(title="Titanic Survival Rates across categories")
facetChart
facetChart + theme_bw()
facetChart + theme_dark()
facetChart + theme_classic()
facetChart + theme_gray()
